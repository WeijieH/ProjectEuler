'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
'''


from math import sqrt


def getPentagonal(n):
    return n * (3 * n - 1) // 2


def checkPentagonal(p):
    n = (sqrt(1 + 24 * p) + 1) / 6
    return n.is_integer()


limit = 10000
found = False

for k in range(2, limit):
    if found:
        break
    for j in reversed(range(1, k)):
        pk = getPentagonal(k)
        pj = getPentagonal(j)
        if checkPentagonal(pk + pj) and checkPentagonal(pk - pj):
            print('k = {0}, j = {1}'.format(k, j))
            print('D = {0}'.format(pk - pj))
            found = True
            break
